@mixin margin-horizontal($margin) {
  margin-left: $margin;
  margin-right: $margin;
}

@mixin padding-horizontal($padding) {
  padding-left: $padding;
  padding-right: $padding;
}

@import "map-to-vars";
@import "init";
@import "grid-settings";
@import "grid-modifiers";
@import "grid-nesting";
@import "iprox";
@import "debug-colors";

@each $viewport in map-get($baseline, viewports) {

  @if (map-has-key($viewport, min) and map-has-key($viewport, max)) {
    $min: map-get($viewport, min);
    $max: map-get($viewport, max);
    $fluid: map-get($viewport, fluid);

    @media screen and (min-width: $min) and (max-width: $max) {
      $current-columns: map-get($viewport, columns);
      @if $fluid == true {
        $wrapper-width: 100%;
        $container-width: 100%;
      }
      @else if $fluid == false {
        $container-width: $current-columns * $column-width;
        $wrapper-width: $container-width + $container-gutter * 2;
      }
      @import "viewport-logic";
    }
  }
  @else if (map-has-key($viewport, max)) {
    $max: map-get($viewport, max);
    $fluid: map-get($viewport, fluid);

    @media screen and (max-width: $max) {
      $current-columns: map-get($viewport, columns);

      @if $fluid == true {
        $wrapper-width: 100%;
        $container-width: 100%;
      }
      @else if $fluid == false {
        $container-width: $current-columns * $column-width;
        $wrapper-width: $container-width + $container-gutter * 2;
      }
      @import "viewport-logic";
    }
  }
  @else if (map-has-key($viewport, min)) {
    $min: map-get($viewport, min);
    $fluid: map-get($viewport, fluid);

    @media screen and (min-width: $min) {
      $current-columns: map-get($viewport, columns);

      @if $fluid == true {
        $wrapper-width: 100%;
        $container-width: 100%;
      }
      @else if $fluid == false {
        $container-width: $current-columns * $column-width;
        $wrapper-width: $container-width + $container-gutter * 2;
      }
      @import "viewport-logic";
      @import "large-logic";
    }
  }
}
